{   "scopeName": "source.tlaplus",
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "TLA+",
	"foldingStartMarker": "\\\\* BEGIN TRANSLATION",
	"foldingStopMarker": "\\\\* END TRANSLATION",
	"patterns": [
		{
			"include": "#pluscal"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#embedded_operators"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#line_comments"
		},
		{
			"include": "#block_comments"
		},
		{
			"include": "#module_start"
		},
		{
			"include": "#module_end"
		},
		{
			"include": "#constants"
		}
	],
	"repository": {
		"pluscal": {
			"begin": "(\\(\\*) --(algorithm)\\s*.*",
			"beginCaptures": {
				"1": {
					"name": "comment.line"
				},
				"2": {
					"name": "keyword.other"
				}
			},
			"end": "(end\\s+algorithm)(;)?\\s*(\\*\\))",
			"endCaptures": {
				"1": {
					"name": "keyword.other"
				},
				"3": {
					"name": "comment.line"
				}
			},
			"patterns": [{
				"include": "source.tlaplus.pluscal"
			}]
		},
		"keywords": {
			"name": "keyword.control.tlaplus",
			"match": "\\b(MODULE|EXTENDS|VARIABLES|IF|THEN|ELSE|CASE|OTHER|LET|IN|EXCEPT|ENABLED|UNCHANGED|CHOOSE|BOOLEAN|LAMBDA|DOMAIN|CONSTANTS|ASSUME|RECURSIVE|INSTANCE|WITH|THEOREM|LOCAL|SUBSET|UNION)\\b"
		},
		"embedded_operators": {
			"name": "strong",
			"match": "\\\\(in|A|E|X|union|o|~)"
		},
		"constants": {
			"name": "support.constant.tlaplus",
			"match": "\\b(TRUE|FALSE|BOOLEAN)\\b"
		},
		"strings": {
			"name": "string.quoted.double.tlaplus",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.tlaplus",
					"match": "\\\\."
				}
			]
		},
		"line_comments": {
			"name": "comment.line",
			"begin": "\\\\\\*",
			"end": "$"
		},
		"block_comments": {
			"name": "comment.block",
			"begin": "\\(\\*",
			"end": "\\*\\)"
		},
		"module_start": {
			"name": "comment.line",
			"match": "^\\s*-{4,}\\s*(MODULE)\\s*(\\w*)\\s*-{4,}",
			"captures": {
				"1": {
					"name": "keyword.control"
				},
				"2": {
					"name": "entity.name.section"
				}
			}
		},
		"module_end": {
			"name": "comment.line",
			"match": "^={4,}\\s*$"	
		}
	}
}